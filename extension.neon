includes:
    - rules.neon
parameters:
    bootstrapFiles:
        - bootstrap.php
    universalObjectCratesClasses:
        - SilverStripe\Core\Config\Config_ForClass
        - SilverStripe\Forms\GridField\GridState_Data
        - Symbiote\QueuedJobs\Services\AbstractQueuedJob
services:
    configCollectionFactory:
        class: Cambis\Silverstan\ConfigurationResolver\ConfigCollectionFactory\LazyConfigCollectionFactory
    -
        class: Cambis\Silverstan\ConfigurationResolver\ConfigurationResolver
    -
        class: Cambis\Silverstan\ConfigurationResolver\Contract\ConfigCollectionFactoryInterface
        factory: @configCollectionFactory
    -
        class: Cambis\Silverstan\NodeVisitor\PropertyFetchAssignedToVisitor
        tags: [phpstan.parser.richParserNodeVisitor]
    -
        class: Cambis\Silverstan\Normaliser\Normaliser
    -
        class: Cambis\Silverstan\PhpDoc\StubFilesExtension\SilverstripeStubFilesExtension
        tags: [phpstan.stubFilesExtension]
    -
        class: Cambis\Silverstan\PhpDoc\TypeNodeResolverExtension\DataObjectTypeNodeResolverExtension
        tags: [phpstan.phpDoc.typeNodeResolverExtension]
    -
        class: Cambis\Silverstan\PhpDoc\TypeNodeResolverExtension\ExtensionOwnerTypeNodeResolverExtension
        tags: [phpstan.phpDoc.typeNodeResolverExtension]
    -
        class: Cambis\Silverstan\Reflection\ClassReflectionExtension\AnnotationClassReflectionExtension
    -
        class: Cambis\Silverstan\Reflection\ClassReflectionExtension\ExtensibleClassReflectionExtension
        tags: 
            - phpstan.broker.methodsClassReflectionExtension
            - phpstan.broker.propertiesClassReflectionExtension
    -
        class: Cambis\Silverstan\Reflection\ClassReflectionExtension\ViewableDataClassReflectionExtension
        tags: [phpstan.broker.propertiesClassReflectionExtension]
    -
        class: Cambis\Silverstan\ReflectionAnalyser\ClassReflectionAnalyser
    -
        class: Cambis\Silverstan\ReflectionAnalyser\PropertyReflectionAnalyser
    -
        class: Cambis\Silverstan\ReflectionResolver\ReflectionResolver
    -
        class: Cambis\Silverstan\ReflectionResolver\Contract\ReflectionResolverRegistryProviderInterface
        factory: Cambis\Silverstan\ReflectionResolver\ReflectionResolverRegistryProvider\LazyReflectionResolverRegistryProvider
    -
        class: Cambis\Silverstan\ReflectionResolver\ReflectionResolver\DBPropertyReflectionResolver
        tags: [silverstan.reflectionResolver.propertyReflectionResolver]
    -
        class: Cambis\Silverstan\ReflectionResolver\ReflectionResolver\DependencyInjectionPropertyReflectionResolver
        tags: [silverstan.reflectionResolver.propertyReflectionResolver]
    -
        class: Cambis\Silverstan\ReflectionResolver\ReflectionResolver\DisplayLogicCriteriaComparisonsMethodReflectionResolver
        tags: [silverstan.reflectionResolver.methodReflectionResolver]
    -
        class: Cambis\Silverstan\ReflectionResolver\ReflectionResolver\ExtensionMethodReflectionResolver
        tags: [silverstan.reflectionResolver.methodReflectionResolver]
    -
        class: Cambis\Silverstan\ReflectionResolver\ReflectionResolver\ResponsiveImageSetsMethodReflectionResolver
        tags: [silverstan.reflectionResolver.methodReflectionResolver]
    -
        class: Cambis\Silverstan\ReflectionResolver\ReflectionResolver\SimpleRelationMethodReflectionResolver
        tags: [silverstan.reflectionResolver.methodReflectionResolver]
        arguments:
            configurationPropertyName: 'belongs_many_many'
    -
        class: Cambis\Silverstan\ReflectionResolver\ReflectionResolver\SimpleRelationMethodReflectionResolver
        tags: [silverstan.reflectionResolver.methodReflectionResolver]
        arguments:
            configurationPropertyName: 'belongs_to'
    -
        class: Cambis\Silverstan\ReflectionResolver\ReflectionResolver\SimpleRelationMethodReflectionResolver
        tags: [silverstan.reflectionResolver.methodReflectionResolver]
        arguments:
            configurationPropertyName: 'has_one'
    -
        class: Cambis\Silverstan\ReflectionResolver\ReflectionResolver\SimpleRelationMethodReflectionResolver
        tags: [silverstan.reflectionResolver.methodReflectionResolver]
        arguments:
            configurationPropertyName: 'has_many'
    -
        class: Cambis\Silverstan\ReflectionResolver\ReflectionResolver\SimpleRelationMethodReflectionResolver
        tags: [silverstan.reflectionResolver.methodReflectionResolver]
        arguments:
            configurationPropertyName: 'many_many'
    -
        class: Cambis\Silverstan\ReflectionResolver\ReflectionResolver\SimpleRelationPropertyReflectionResolver
        tags: [silverstan.reflectionResolver.propertyReflectionResolver]
        arguments:
            configurationPropertyName: 'belongs_to'
    -
        class: Cambis\Silverstan\ReflectionResolver\ReflectionResolver\SimpleRelationPropertyReflectionResolver
        tags: [silverstan.reflectionResolver.propertyReflectionResolver]
        arguments:
            configurationPropertyName: 'has_one'
    -
        class: Cambis\Silverstan\Rule\ClassPropertiesNode\ReadWritePropertiesExtension\ConfigurationPropertiesExtension
        tags: [phpstan.properties.readWriteExtension]
    -
        class: Cambis\Silverstan\Type\DynamicReturnTypeExtension\ConfigCollectionInterfaceGetReturnTypeExtension
        tags: [phpstan.broker.dynamicMethodReturnTypeExtension]
    -
        class: Cambis\Silverstan\Type\DynamicReturnTypeExtension\ConfigForClassGetReturnTypeExtension
        tags: [phpstan.broker.dynamicMethodReturnTypeExtension]
    -
        class: Cambis\Silverstan\Type\DynamicReturnTypeExtension\DataObjectDbObjectReturnTypeExtension
        tags: [phpstan.broker.dynamicMethodReturnTypeExtension]
    -
        class: Cambis\Silverstan\Type\DynamicReturnTypeExtension\ExtensionGetOwnerReturnTypeExtension
        tags: [phpstan.broker.dynamicMethodReturnTypeExtension]
    -
        class: Cambis\Silverstan\Type\DynamicReturnTypeExtension\InjectorGetReturnTypeExtension
        tags: [phpstan.broker.dynamicMethodReturnTypeExtension]
    -
        class: Cambis\Silverstan\Type\DynamicReturnTypeExtension\SingletonReturnTypeExtension
        tags: [phpstan.broker.dynamicFunctionReturnTypeExtension]
    -
        class: Cambis\Silverstan\Type\TypeSpecifyingExtension\DataObjectDeleteTypeSpecifyingExtension
        tags: [phpstan.typeSpecifier.methodTypeSpecifyingExtension]
    -
        class: Cambis\Silverstan\Type\TypeSpecifyingExtension\DataObjectExistsTypeSpecifyingExtension
        tags: [phpstan.typeSpecifier.methodTypeSpecifyingExtension]
    -
        class: Cambis\Silverstan\Type\TypeSpecifyingExtension\DataObjectWriteTypeSpecifyingExtension
        tags: [phpstan.typeSpecifier.methodTypeSpecifyingExtension]
    # silverstripe/framework: <= 6.x
    -
        class: Cambis\Silverstan\Type\TypeSpecifyingExtension\ExtensibleHasExtensionTypeSpecifyingExtension
        tags: [phpstan.typeSpecifier.methodTypeSpecifyingExtension]
        arguments:
            className: 'SilverStripe\View\ViewableData'
    # silverstripe/framework: >= 6.x
    -
        class: Cambis\Silverstan\Type\TypeSpecifyingExtension\ExtensibleHasExtensionTypeSpecifyingExtension
        tags: [phpstan.typeSpecifier.methodTypeSpecifyingExtension]
        arguments:
            className: 'SilverStripe\Model\ModelData'
    # silverstripe/framework: <= 6.x
    -
        class: Cambis\Silverstan\Type\TypeSpecifyingExtension\ExtensibleHasMethodTypeSpecifyingExtension
        tags: [phpstan.typeSpecifier.methodTypeSpecifyingExtension]
        arguments:
            className: 'SilverStripe\View\ViewableData'
    # silverstripe/framework: >= 6.x
    -
        class: Cambis\Silverstan\Type\TypeSpecifyingExtension\ExtensibleHasMethodTypeSpecifyingExtension
        tags: [phpstan.typeSpecifier.methodTypeSpecifyingExtension]
        arguments:
            className: 'SilverStripe\Model\ModelData'
    # silverstripe/framework: <= 6.x
    -
        class: Cambis\Silverstan\Type\TypeSpecifyingExtension\ViewableDataHasFieldTypeSpecifyingExtension
        tags: [phpstan.typeSpecifier.methodTypeSpecifyingExtension]
        arguments:
            className: 'SilverStripe\View\ViewableData'
    # silverstripe/framework: >= 6.x
    -
        class: Cambis\Silverstan\Type\TypeSpecifyingExtension\ViewableDataHasFieldTypeSpecifyingExtension
        tags: [phpstan.typeSpecifier.methodTypeSpecifyingExtension]
        arguments:
            className: 'SilverStripe\Model\ModelData'
    -
        class: Cambis\Silverstan\TypeFactory\TypeFactory
    -
        class: Cambis\Silverstan\TypeResolver\TypeResolver
    -
        class: Cambis\Silverstan\TypeResolver\Contract\TypeResolverRegistryProviderInterface
        factory: Cambis\Silverstan\TypeResolver\TypeResolverRegistryProvider\LazyTypeResolverRegistryProvider
    -
        class: Cambis\Silverstan\TypeResolver\TypeResolver\DBPropertyTypeResolver
        tags: [silverstan.typeResolver.propertyTypeResolver]
    -
        class: Cambis\Silverstan\TypeResolver\TypeResolver\DependencyInjectionPropertyTypeResolver
        tags: [silverstan.typeResolver.propertyTypeResolver]
    -
        class: Cambis\Silverstan\TypeResolver\TypeResolver\ManyRelationMethodTypeResolver
        tags: [silverstan.typeResolver.methodTypeResolver]
        arguments:
            configurationPropertyName: 'belongs_many_many'
            listName: 'SilverStripe\ORM\ManyManyList'
    -
        class: Cambis\Silverstan\TypeResolver\TypeResolver\ManyRelationMethodTypeResolver
        tags: [silverstan.typeResolver.methodTypeResolver]
        arguments:
            configurationPropertyName: 'has_many'
            listName: 'SilverStripe\ORM\HasManyList'
    -
        class: Cambis\Silverstan\TypeResolver\TypeResolver\ManyRelationMethodTypeResolver
        tags: [silverstan.typeResolver.methodTypeResolver]
        arguments:
            configurationPropertyName: 'many_many'
            listName: 'SilverStripe\ORM\ManyManyList'
    -
        class: Cambis\Silverstan\TypeResolver\TypeResolver\SimpleRelationMethodTypeResolver
        tags: [silverstan.typeResolver.methodTypeResolver]
        arguments:
            configurationPropertyName: 'belongs_to'
    -
        class: Cambis\Silverstan\TypeResolver\TypeResolver\SimpleRelationMethodTypeResolver
        tags: [silverstan.typeResolver.methodTypeResolver]
        arguments:
            configurationPropertyName: 'has_one'
    -
        class: Cambis\Silverstan\TypeResolver\TypeResolver\SimpleRelationPropertyTypeResolver
        tags: [silverstan.typeResolver.propertyTypeResolver]
        arguments:
            configurationPropertyName: 'belongs_to'
    -
        class: Cambis\Silverstan\TypeResolver\TypeResolver\SimpleRelationPropertyTypeResolver
        tags: [silverstan.typeResolver.propertyTypeResolver]
        arguments:
            configurationPropertyName: 'has_one'
    - 
        class: PhpParser\NodeFinder
