<?php

namespace SilverStripe\ORM\FieldType;

use SilverStripe\ORM\FieldType\DBIndexable;
use SilverStripe\View\ViewableData;

/**
 * @template R
 * @template W
 */
abstract class DBField
{
    /**
     * Returns the value of this field.
     *
     * @return R
     */
    public function getValue()
    {
    }

    /**
     * Set the value of this field in various formats.
     * Used by {@link DataObject->getField()}, {@link DataObject->setCastedField()}
     * {@link DataObject->dbObject()} and {@link DataObject->write()}.
     *
     * As this method is used both for initializing the field after construction,
     * and actually changing its values, it needs a {@link $markChanged}
     * parameter.
     *
     * @param W $value
     * @param \SilverStripe\ORM\DataObject|mixed[]|null $record An array or object that this field is part of
     * @param bool $markChanged Indicate whether this field should be marked changed.
     *  Set to FALSE if you are initializing this field after construction, rather
     *  than setting a new value.
     * @return static
     */
    public function setValue($value, $record = null, $markChanged = true)
    {
    }

    /**
     * Create a DBField object that's not bound to any particular field.
     *
     * Useful for accessing the classes behaviour for other parts of your code.
     *
     * @template T
     * @param string $spec Class specification to construct. May include both service name and additional
     * @phpstan-param class-string<T>|string $spec Class specification to construct. May include both service name and additional
     * constructor arguments in the same format as DataObject.db config.
     * @param mixed $value value of field
     * @param string $name Name of field
     * @param mixed $args Additional arguments to pass to constructor if not using args in service $spec
     * Note: Will raise a warning if using both
     * @return static
     * @phpstan-return ($spec is class-string<T> ? T : static)
     */
    public static function create_field($spec, $value, $name = null, ...$args)
    {
    }
}
